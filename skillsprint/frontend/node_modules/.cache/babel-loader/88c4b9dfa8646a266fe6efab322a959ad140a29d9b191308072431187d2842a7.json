{"ast":null,"code":"var _jsxFileName = \"/Users/ericlarwa/Desktop/SkillSprint/SkillSprint/skillsprint/frontend/src/coding/CodeSandbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/webpack-resolver';\nimport './CodeSandbox.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeSandbox = () => {\n  _s();\n  var _currentQuestion$answ;\n  const [code, setCode] = useState('# Write your Python code here');\n  const [output, setOutput] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [testResults, setTestResults] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [difficulty, setDifficulty] = useState(0);\n  useEffect(() => {\n    fetchQuestions();\n  }, [difficulty]);\n  const fetchQuestions = async () => {\n    try {\n      setLoading(true);\n      const url = `http://localhost:4000/api/questions/Coding${difficulty ? `?difficulty=${difficulty}` : ''}`;\n      const response = await axios.get(url);\n      setQuestions(response.data);\n      if (response.data.length > 0) {\n        handleSelectQuestion(response.data[0]);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n      setLoading(false);\n    }\n  };\n  const handleSelectQuestion = question => {\n    setCurrentQuestion(question);\n    const parts = question.question.split(\"\\n\\n\");\n    const initialCodeIndex = parts.findIndex(part => part.startsWith(\"def \"));\n    if (initialCodeIndex !== -1) {\n      setCode(parts.slice(initialCodeIndex).join(\"\\n\\n\"));\n    } else {\n      setCode(\"# Write your solution here\");\n    }\n    setOutput('');\n    setTestResults(null);\n    setShowSolution(false);\n  };\n  const handleRunCode = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:4000/api/run-code', {\n        code\n      });\n      setOutput(response.data.output || response.data.error);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error running code:', error);\n      setOutput('Error: Failed to execute code');\n      setLoading(false);\n    }\n  };\n  const handleTestCode = async () => {\n    if (!currentQuestion) return;\n    try {\n      setLoading(true);\n      const testCasesAnswer = currentQuestion.answers.find(a => a.explanation === \"TEST_CASES\");\n      if (!testCasesAnswer) {\n        setOutput(\"Error: Test cases not found for this question.\");\n        setLoading(false);\n        return;\n      }\n      const testCases = JSON.parse(testCasesAnswer.text);\n      const results = [];\n      let allPassed = true;\n      for (const testCase of testCases) {\n        // Add a unique identifier to each test to prevent caching\n        const testId = Math.random().toString(36).substring(7);\n        const testCode = `\n                ${code}\n                \n                # Test case ${testId}\n                input_value = ${JSON.stringify(testCase.input)}\n                result = ${getFunctionName(code)}(input_value)\n                print(result)  # Print just the result\n    `;\n\n        // Reset all state variables before making the request\n        const response = await axios.post('http://localhost:4000/api/run-code', {\n          code: testCode,\n          nocache: Date.now() // Prevent API caching\n        });\n        const output = response.data.output ? response.data.output.trim() : '';\n        console.log(`Test ${testId} raw output:`, output);\n\n        // Parse the output directly without using regex\n        let actualResult = null;\n        try {\n          // If it's a number\n          if (!isNaN(output) && output !== '') {\n            actualResult = Number(output);\n          }\n          // If it's JSON (array or object)\n          else if (output.startsWith('[') && output.endsWith(']') || output.startsWith('{') && output.endsWith('}')) {\n            actualResult = JSON.parse(output);\n          }\n          // Otherwise treat as string\n          else {\n            actualResult = output;\n          }\n        } catch (e) {\n          console.error(\"Error parsing result:\", e);\n          actualResult = output; // Fallback to raw string\n        }\n        const passed = compareResults(actualResult, testCase.expected);\n        if (!passed) allPassed = false;\n        results.push({\n          input: testCase.input,\n          expected: testCase.expected,\n          actual: actualResult,\n          passed\n        });\n      }\n      setTestResults({\n        allPassed,\n        results\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('Error testing code:', error);\n      setOutput('Error: Failed to test code');\n      setLoading(false);\n    }\n  };\n  const compareResults = (actual, expected) => {\n    if (Array.isArray(expected)) {\n      if (!Array.isArray(actual)) return false;\n      if (actual.length !== expected.length) return false;\n      if (expected.every(item => typeof item !== 'object')) {\n        return JSON.stringify([...actual].sort()) === JSON.stringify([...expected].sort());\n      }\n      return actual.every((item, i) => compareResults(item, expected[i]));\n    } else if (typeof expected === 'object' && expected !== null) {\n      if (typeof actual !== 'object' || actual === null) return false;\n      const expectedKeys = Object.keys(expected).sort();\n      const actualKeys = Object.keys(actual).sort();\n      if (expectedKeys.length !== actualKeys.length) return false;\n      if (!expectedKeys.every((key, i) => key === actualKeys[i])) return false;\n      return expectedKeys.every(key => compareResults(actual[key], expected[key]));\n    } else {\n      return actual === expected;\n    }\n  };\n  const handleShowSolution = () => {\n    if (!currentQuestion) return;\n    const solutionAnswer = currentQuestion.answers.find(a => a.is_correct);\n    if (solutionAnswer) {\n      setCode(solutionAnswer.text);\n      setShowSolution(true);\n    }\n  };\n  const getFunctionName = code => {\n    const match = code.match(/def\\s+([a-zA-Z0-9_]+)\\s*\\(/);\n    return match ? match[1] : 'function';\n  };\n  const handleDifficultyChange = e => {\n    setDifficulty(parseInt(e.target.value) || 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-sandbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pythn-hdr\",\n      children: \"Python Coding Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"difficulty-filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"difficulty\",\n        children: \"Difficulty Level: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"difficulty\",\n        value: difficulty,\n        onChange: handleDifficultyChange,\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"All Levels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coding-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), currentQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"question\",\n              children: \"Select Challenge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"question\",\n              onChange: e => {\n                const selectedQuestion = questions.find(q => q.id === parseInt(e.target.value));\n                if (selectedQuestion) {\n                  handleSelectQuestion(selectedQuestion);\n                }\n              },\n              value: currentQuestion.id,\n              disabled: loading,\n              children: questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: question.id,\n                children: [question.question.split('\\n')[0].substring(0, 60), \"...\"]\n              }, question.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-description\",\n            children: [currentQuestion.question.split('\\n\\n')[0].split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"difficulty\",\n              children: [\"Difficulty: \", currentQuestion.difficulty === 1 ? 'Easy' : currentQuestion.difficulty === 2 ? 'Medium' : 'Hard']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), testResults && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `test-results ${testResults.allPassed ? 'success' : 'failure'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: testResults.allPassed ? 'All Tests Passed! 🎉' : 'Some Tests Failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this), testResults.results.map((result, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `test-case ${result.passed ? 'passed' : 'failed'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Test \", i + 1, \": \", result.passed ? '✓' : '✗']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 50\n                }, this), \" \", JSON.stringify(result.input)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Expected:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 50\n                }, this), \" \", JSON.stringify(result.expected)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 45\n              }, this), !result.passed && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Actual:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 69\n                }, this), \" \", JSON.stringify(result.actual)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 64\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-section\",\n            children: [currentQuestion.answers.some(a => a.is_correct) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShowSolution,\n              className: \"hint-button\",\n              disabled: showSolution,\n              children: showSolution ? 'Solution Shown' : 'Show Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 37\n            }, this), showSolution && ((_currentQuestion$answ = currentQuestion.answers.find(a => a.is_correct)) === null || _currentQuestion$answ === void 0 ? void 0 : _currentQuestion$answ.explanation) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"explanation\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Explanation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: currentQuestion.answers.find(a => a.is_correct).explanation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: loading ? 'Loading questions...' : 'No coding challenges available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sandbox-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"code-editr\",\n          children: \"Code Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n          mode: \"python\",\n          theme: \"xcode\",\n          onChange: setCode,\n          name: \"code_editor\",\n          editorProps: {\n            $blockScrolling: true\n          },\n          width: \"100%\",\n          height: \"400px\",\n          value: code,\n          setOptions: {\n            useWorker: false,\n            fontSize: 14,\n            showPrintMargin: false,\n            highlightActiveLine: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRunCode,\n            disabled: loading,\n            className: \"run-button\",\n            children: loading ? 'Running...' : 'Run Code'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTestCode,\n            disabled: loading || !currentQuestion,\n            className: \"test-button\",\n            children: loading ? 'Testing...' : 'Test Solution'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeSandbox, \"V5b9QNE3TDevvgf4ihHl7CLd/hE=\");\n_c = CodeSandbox;\nexport default CodeSandbox;\nvar _c;\n$RefreshReg$(_c, \"CodeSandbox\");","map":{"version":3,"names":["React","useState","useEffect","AceEditor","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeSandbox","_s","_currentQuestion$answ","code","setCode","output","setOutput","questions","setQuestions","currentQuestion","setCurrentQuestion","loading","setLoading","testResults","setTestResults","showSolution","setShowSolution","difficulty","setDifficulty","fetchQuestions","url","response","get","data","length","handleSelectQuestion","error","console","question","parts","split","initialCodeIndex","findIndex","part","startsWith","slice","join","handleRunCode","post","handleTestCode","testCasesAnswer","answers","find","a","explanation","testCases","JSON","parse","text","results","allPassed","testCase","testId","Math","random","toString","substring","testCode","stringify","input","getFunctionName","nocache","Date","now","trim","log","actualResult","isNaN","Number","endsWith","e","passed","compareResults","expected","push","actual","Array","isArray","every","item","sort","i","expectedKeys","Object","keys","actualKeys","key","handleShowSolution","solutionAnswer","is_correct","match","handleDifficultyChange","parseInt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","disabled","selectedQuestion","q","map","line","result","some","onClick","mode","theme","name","editorProps","$blockScrolling","width","height","setOptions","useWorker","fontSize","showPrintMargin","highlightActiveLine","_c","$RefreshReg$"],"sources":["/Users/ericlarwa/Desktop/SkillSprint/SkillSprint/skillsprint/frontend/src/coding/CodeSandbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AceEditor from 'react-ace';\nimport axios from 'axios';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/webpack-resolver';\nimport './CodeSandbox.css';\n\nconst CodeSandbox = () => {\n    const [code, setCode] = useState('# Write your Python code here');\n    const [output, setOutput] = useState('');\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [testResults, setTestResults] = useState(null);\n    const [showSolution, setShowSolution] = useState(false);\n    const [difficulty, setDifficulty] = useState(0); \n\n    useEffect(() => {\n        fetchQuestions();\n    }, [difficulty]);\n\n    const fetchQuestions = async () => {\n        try {\n            setLoading(true);\n            const url = `http://localhost:4000/api/questions/Coding${difficulty ? `?difficulty=${difficulty}` : ''}`;\n            const response = await axios.get(url);\n            setQuestions(response.data);\n            \n            if (response.data.length > 0) {\n                handleSelectQuestion(response.data[0]);\n            }\n            \n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching questions:', error);\n            setLoading(false);\n        }\n    };\n\n    const handleSelectQuestion = (question) => {\n        setCurrentQuestion(question);\n        \n        const parts = question.question.split(\"\\n\\n\");\n        const initialCodeIndex = parts.findIndex(part => part.startsWith(\"def \"));\n        \n        if (initialCodeIndex !== -1) {\n            setCode(parts.slice(initialCodeIndex).join(\"\\n\\n\"));\n        } else {\n            setCode(\"# Write your solution here\");\n        }\n        \n        setOutput('');\n        setTestResults(null);\n        setShowSolution(false);\n    };\n\n    const handleRunCode = async () => {\n        try {\n            setLoading(true);\n            const response = await axios.post('http://localhost:4000/api/run-code', { code });\n            setOutput(response.data.output || response.data.error);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error running code:', error);\n            setOutput('Error: Failed to execute code');\n            setLoading(false);\n        }\n    };\n\n    const handleTestCode = async () => {\n        if (!currentQuestion) return;\n        \n        try {\n            setLoading(true);\n            \n            const testCasesAnswer = currentQuestion.answers.find(a => a.explanation === \"TEST_CASES\");\n            if (!testCasesAnswer) {\n                setOutput(\"Error: Test cases not found for this question.\");\n                setLoading(false);\n                return;\n            }\n    \n            const testCases = JSON.parse(testCasesAnswer.text);\n            const results = [];\n            let allPassed = true;\n    \n            for (const testCase of testCases) {\n                // Add a unique identifier to each test to prevent caching\n                const testId = Math.random().toString(36).substring(7);\n                \n                const testCode = `\n                ${code}\n                \n                # Test case ${testId}\n                input_value = ${JSON.stringify(testCase.input)}\n                result = ${getFunctionName(code)}(input_value)\n                print(result)  # Print just the result\n    `;\n                \n                // Reset all state variables before making the request\n                const response = await axios.post('http://localhost:4000/api/run-code', { \n                    code: testCode,\n                    nocache: Date.now()  // Prevent API caching\n                });\n                \n                const output = response.data.output ? response.data.output.trim() : '';\n                console.log(`Test ${testId} raw output:`, output);\n                \n                // Parse the output directly without using regex\n                let actualResult = null;\n                try {\n                    // If it's a number\n                    if (!isNaN(output) && output !== '') {\n                        actualResult = Number(output);\n                    } \n                    // If it's JSON (array or object)\n                    else if ((output.startsWith('[') && output.endsWith(']')) || \n                             (output.startsWith('{') && output.endsWith('}'))) {\n                        actualResult = JSON.parse(output);\n                    } \n                    // Otherwise treat as string\n                    else {\n                        actualResult = output;\n                    }\n                } catch (e) {\n                    console.error(\"Error parsing result:\", e);\n                    actualResult = output; // Fallback to raw string\n                }\n                \n                const passed = compareResults(actualResult, testCase.expected);\n                \n                if (!passed) allPassed = false;\n                \n                results.push({\n                    input: testCase.input,\n                    expected: testCase.expected,\n                    actual: actualResult,\n                    passed\n                });\n            }\n            \n            setTestResults({\n                allPassed,\n                results\n            });\n            \n            setLoading(false);\n        } catch (error) {\n            console.error('Error testing code:', error);\n            setOutput('Error: Failed to test code');\n            setLoading(false);\n        }\n    };\n\n    const compareResults = (actual, expected) => {\n        if (Array.isArray(expected)) {\n            if (!Array.isArray(actual)) return false;\n            if (actual.length !== expected.length) return false;\n            \n            if (expected.every(item => typeof item !== 'object')) {\n                return JSON.stringify([...actual].sort()) === JSON.stringify([...expected].sort());\n            }\n            \n            return actual.every((item, i) => compareResults(item, expected[i]));\n        } else if (typeof expected === 'object' && expected !== null) {\n            if (typeof actual !== 'object' || actual === null) return false;\n            \n            const expectedKeys = Object.keys(expected).sort();\n            const actualKeys = Object.keys(actual).sort();\n            \n            if (expectedKeys.length !== actualKeys.length) return false;\n            if (!expectedKeys.every((key, i) => key === actualKeys[i])) return false;\n            \n            return expectedKeys.every(key => compareResults(actual[key], expected[key]));\n        } else {\n            return actual === expected;\n        }\n    };\n\n    const handleShowSolution = () => {\n        if (!currentQuestion) return;\n        \n        const solutionAnswer = currentQuestion.answers.find(a => a.is_correct);\n        if (solutionAnswer) {\n            setCode(solutionAnswer.text);\n            setShowSolution(true);\n        }\n    };\n\n    const getFunctionName = (code) => {\n        const match = code.match(/def\\s+([a-zA-Z0-9_]+)\\s*\\(/);\n        return match ? match[1] : 'function';\n    };\n\n\n    const handleDifficultyChange = (e) => {\n        setDifficulty(parseInt(e.target.value) || 0);\n    };\n\n    return (\n        <div className=\"coding-sandbox-container\">\n            <h1 className=\"pythn-hdr\">Python Coding Practice</h1>\n\n            <div className=\"difficulty-filter\">\n                <label htmlFor=\"difficulty\">Difficulty Level: </label>\n                <select \n                    id=\"difficulty\" \n                    value={difficulty} \n                    onChange={handleDifficultyChange}\n                    disabled={loading}\n                >\n                    <option value=\"0\">All Levels</option>\n                    <option value=\"1\">Easy</option>\n                    <option value=\"2\">Medium</option>\n                    <option value=\"3\">Hard</option>\n                </select>\n            </div>\n\n            <div className=\"coding-content\">\n                <div className=\"question-panel\">\n                    <h2>Challenge</h2>\n                    {currentQuestion ? (\n                        <>\n                            <div className=\"question-selector\">\n                                <label htmlFor=\"question\">Select Challenge: </label>\n                                <select \n                                    id=\"question\" \n                                    onChange={(e) => {\n                                        const selectedQuestion = questions.find(q => q.id === parseInt(e.target.value));\n                                        if (selectedQuestion) {\n                                            handleSelectQuestion(selectedQuestion);\n                                        }\n                                    }}\n                                    value={currentQuestion.id}\n                                    disabled={loading}\n                                >\n                                    {questions.map(question => (\n                                        <option key={question.id} value={question.id}>\n                                            {question.question.split('\\n')[0].substring(0, 60)}...\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            \n                            <div className=\"question-description\">\n                                {currentQuestion.question.split('\\n\\n')[0].split('\\n').map((line, i) => (\n                                    <p key={i}>{line}</p>\n                                ))}\n                                <p className=\"difficulty\">\n                                    Difficulty: {currentQuestion.difficulty === 1 ? 'Easy' : \n                                                currentQuestion.difficulty === 2 ? 'Medium' : 'Hard'}\n                                </p>\n                            </div>\n                            \n                            {testResults && (\n                                <div className={`test-results ${testResults.allPassed ? 'success' : 'failure'}`}>\n                                    <h3>{testResults.allPassed ? 'All Tests Passed! 🎉' : 'Some Tests Failed'}</h3>\n                                    {testResults.results.map((result, i) => (\n                                        <div key={i} className={`test-case ${result.passed ? 'passed' : 'failed'}`}>\n                                            <div>Test {i+1}: {result.passed ? '✓' : '✗'}</div>\n                                            <div><strong>Input:</strong> {JSON.stringify(result.input)}</div>\n                                            <div><strong>Expected:</strong> {JSON.stringify(result.expected)}</div>\n                                            {!result.passed && <div><strong>Actual:</strong> {JSON.stringify(result.actual)}</div>}\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                            \n                            <div className=\"hint-section\">\n                                {currentQuestion.answers.some(a => a.is_correct) && (\n                                    <button \n                                        onClick={handleShowSolution} \n                                        className=\"hint-button\"\n                                        disabled={showSolution}\n                                    >\n                                        {showSolution ? 'Solution Shown' : 'Show Solution'}\n                                    </button>\n                                )}\n                                \n                                {showSolution && currentQuestion.answers.find(a => a.is_correct)?.explanation && (\n                                    <div className=\"explanation\">\n                                        <h4>Explanation:</h4>\n                                        <p>{currentQuestion.answers.find(a => a.is_correct).explanation}</p>\n                                    </div>\n                                )}\n                            </div>\n                        </>\n                    ) : (\n                        <div className=\"no-questions\">\n                            {loading ? 'Loading questions...' : 'No coding challenges available.'}\n                        </div>\n                    )}\n                </div>\n                \n                <div className=\"sandbox-panel\">\n                    <h2 className='code-editr'>Code Editor</h2>\n                    <AceEditor\n                        mode=\"python\"\n                        theme=\"xcode\"\n                        onChange={setCode}\n                        name=\"code_editor\"\n                        editorProps={{ $blockScrolling: true }}\n                        width=\"100%\"\n                        height=\"400px\"\n                        value={code}\n                        setOptions={{\n                            useWorker: false,\n                            fontSize: 14,\n                            showPrintMargin: false,\n                            highlightActiveLine: true\n                        }}\n                    />\n                    <div className=\"action-buttons\">\n                        <button \n                            onClick={handleRunCode}\n                            disabled={loading}\n                            className=\"run-button\"\n                        >\n                            {loading ? 'Running...' : 'Run Code'}\n                        </button>\n                        <button \n                            onClick={handleTestCode}\n                            disabled={loading || !currentQuestion}\n                            className=\"test-button\"\n                        >\n                            {loading ? 'Testing...' : 'Test Solution'}\n                        </button>\n                    </div>\n                    \n                    <div className=\"output-panel\">\n                        <h3>Output:</h3>\n                        <pre>{output}</pre>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CodeSandbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}