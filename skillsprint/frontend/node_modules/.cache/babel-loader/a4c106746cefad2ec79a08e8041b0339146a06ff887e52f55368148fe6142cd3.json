{"ast":null,"code":"var _jsxFileName = \"/Users/ericlarwa/Desktop/SkillSprint/SkillSprint/skillsprint/frontend/src/finance/FinanceProblems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FinanceProblems.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinanceProblems = () => {\n  _s();\n  const [question, setQuestion] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/questions/Finance');\n        const data = await response.json();\n        if (data.length > 0) {\n          setQuestion(data[0]);\n          setAnswers(data[0].answers);\n        }\n        console.log('Question:', data[0].question);\n      } catch (error) {\n        console.error('Error fetching question:', error);\n      }\n    };\n    fetchQuestion();\n  }, []);\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/api/check-answer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question_id: question.id,\n          answer_id: selectedAnswer\n        })\n      });\n      const data = await response.json();\n      console.log('Response:', data);\n    } catch (error) {\n      console.error('Error submitting answer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"finance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Finance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finance-boxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financebox-one\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), question ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financebox-two\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Answer Choices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), answers.length > 0 ? answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: answer.id,\n            checked: selectedAnswer === answer.id,\n            onChange: handleAnswerChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: answer.answer_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 68\n          }, this)]\n        }, answer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading answers...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(FinanceProblems, \"ZRAdHQ4ZtOY58NdDf+PnuU7Gp5M=\");\n_c = FinanceProblems;\nexport default FinanceProblems;\nvar _c;\n$RefreshReg$(_c, \"FinanceProblems\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FinanceProblems","_s","question","setQuestion","answers","setAnswers","selectedAnswer","setSelectedAnswer","fetchQuestion","response","fetch","data","json","length","console","log","error","handleAnswerChange","event","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","question_id","id","answer_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question_text","map","answer","type","checked","onChange","answer_text","onClick","_c","$RefreshReg$"],"sources":["/Users/ericlarwa/Desktop/SkillSprint/SkillSprint/skillsprint/frontend/src/finance/FinanceProblems.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\nimport './FinanceProblems.css';\n\nconst FinanceProblems = () => {\n\n    const [question, setQuestion] = useState(false)\n    const [answers, setAnswers] = useState([])\n    const [selectedAnswer, setSelectedAnswer] = useState(null)\n\n    useEffect(() => {\n        const fetchQuestion = async () => {\n            try {\n                const response = await fetch('http://localhost:4000/api/questions/Finance')\n                const data = await response.json()\n                if (data.length > 0) {\n                    setQuestion(data[0])\n                    setAnswers(data[0].answers)\n                }\n                console.log('Question:', data[0].question)\n            } catch (error) {\n                console.error('Error fetching question:', error)\n            }\n        }\n        fetchQuestion()\n    }, [])\n\n    const handleAnswerChange = (event) => {\n        setSelectedAnswer(event.target.value)\n    }\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch('http://localhost:4000/api/check-answer', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    question_id: question.id,\n                    answer_id: selectedAnswer\n                })\n            })\n            const data = await response.json()\n            console.log('Response:', data)\n        } catch (error) {\n            console.error('Error submitting answer:', error)\n        }\n    }\n\n    return (\n        <div className=\"finance-container\">\n            <h1>Finance</h1>\n            <div className=\"finance-boxes\">\n                <div className=\"financebox-one\">\n                    <h2>Question:</h2>\n                    {question ? <p>{question.question_text}</p> : <p>Loading...</p>}\n                </div>\n                <div className=\"financebox-two\">\n                    <h2>Answer Choices</h2>\n                    {answers.length > 0 ? (\n                        answers.map((answer) => (\n                            <div key={answer.id}>\n                                <input\n                                    type='radio'\n                                    value={answer.id}\n                                    checked={selectedAnswer === answer.id}\n                                    onChange={handleAnswerChange}\n                                />\n                                <label>{answer.answer_text}</label><br />\n                            </div>\n                        ))\n                    ) : (\n                        <p>Loading answers...</p>\n                    )}\n                </div>\n                <button onClick={handleSubmit}>Submit Answer</button>\n            </div>\n        </div>\n    );\n};\n\nexport default FinanceProblems;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}